{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Web dev\\\\DOConnect\\\\app\\\\screens\\\\AuthenticateUIDScreen.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Layout, useTheme } from \"@ui-kitten/components\";\nimport Form from \"../components/forms/Form\";\nimport * as Yup from \"yup\";\nimport FormField from \"../components/forms/FormField\";\nimport SubmitForm from \"../components/forms/SubmitForm\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchHospitalData } from \"../redux/actions/authActions\";\nimport { CustomSpinner } from \"./CustomSpinner\";\n\nvar HospitalUIDScreen = function HospitalUIDScreen(_ref) {\n  var navigation = _ref.navigation;\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var validationSchema = Yup.object().shape({\n    UID: Yup.number().transform(function (value) {\n      return isNaN(value) ? undefined : +value;\n    }).positive().integer(\"UID must be a number\").required(\"Please mention hospital UID\")\n  });\n\n  var handleSubmit = function handleSubmit(values) {\n    setIsLoading(true);\n    dispatch(fetchHospitalData(+values.UID)).then(function (res) {\n      navigation.navigate(\"VerifyHospitalScreen\");\n      setIsLoading(false);\n    }).catch(function (e) {\n      setIsLoading(false);\n      alert(e.message);\n    });\n  };\n\n  var theme = useTheme();\n  return React.createElement(Layout, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(CustomSpinner, {\n    visible: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(MaterialCommunityIcons, {\n    name: \"hospital-building\",\n    size: 100,\n    color: theme[\"color-primary-500\"],\n    style: {\n      marginBottom: 30,\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(Form, {\n    initialValues: {\n      UID: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      return handleSubmit(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(FormField, {\n    label: \"Hospital Unique Id\",\n    name: \"UID\",\n    placeholder: \"UID\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(SubmitForm, {\n    label: \"Next\",\n    btnStyle: {\n      width: \"50%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    width: \"100%\",\n    paddingHorizontal: 10,\n    flex: 1\n  }\n});\nexport default HospitalUIDScreen;","map":{"version":3,"sources":["D:/Web dev/DOConnect/app/screens/AuthenticateUIDScreen.js"],"names":["React","useState","Layout","useTheme","Form","Yup","FormField","SubmitForm","MaterialCommunityIcons","useDispatch","useSelector","fetchHospitalData","CustomSpinner","HospitalUIDScreen","navigation","auth","state","dispatch","isLoading","setIsLoading","validationSchema","object","shape","UID","number","transform","value","isNaN","undefined","positive","integer","required","handleSubmit","values","then","res","navigate","catch","e","alert","message","theme","styles","container","marginBottom","marginTop","width","StyleSheet","create","alignItems","paddingHorizontal","flex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,uBAAjC;AACA,OAAOC,IAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT;AACA,SAASC,aAAT;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5C,MAAMC,IAAI,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAxB;AACA,MAAME,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,kBAAkCR,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,gBAAgB,GAAGf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,GAAG,EAAElB,GAAG,CAACmB,MAAJ,GACFC,SADE,CACQ,UAACC,KAAD;AAAA,aAAYC,KAAK,CAACD,KAAD,CAAL,GAAeE,SAAf,GAA2B,CAACF,KAAxC;AAAA,KADR,EAEFG,QAFE,GAGFC,OAHE,CAGM,sBAHN,EAIFC,QAJE,CAIO,6BAJP;AADqC,GAAnB,CAAzB;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAuB/Bd,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,QAAQ,CAACN,iBAAiB,CAAC,CAACsB,MAAM,CAACV,GAAT,CAAlB,CAAR,CACGW,IADH,CACQ,UAACC,GAAD,EAAS;AACbrB,MAAAA,UAAU,CAACsB,QAAX,CACE,sBADF;AAMAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATH,EAUGkB,KAVH,CAUS,UAACC,CAAD,EAAO;AACZnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAoB,MAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACD,KAbH;AAyBD,GAjDD;;AAmDA,MAAMC,KAAK,GAAGtC,QAAQ,EAAtB;AACA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEuC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEzB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,mBADP;AAEE,IAAA,IAAI,EAAE,GAFR;AAGE,IAAA,KAAK,EAAEuB,KAAK,CAAC,mBAAD,CAHd;AAIE,IAAA,KAAK,EAAE;AAAEG,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE;AAAEtB,MAAAA,GAAG,EAAE;AAAP,KADjB;AAEE,IAAA,gBAAgB,EAAEH,gBAFpB;AAGE,IAAA,QAAQ,EAAE,kBAACa,MAAD;AAAA,aAAYD,YAAY,CAACC,MAAD,CAAxB;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,oBAAjB;AAAsC,IAAA,IAAI,EAAC,KAA3C;AAAiD,IAAA,WAAW,EAAC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,QAAQ,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,CADF;AA0CD,CA5GD;;AA8GA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,QADH;AAETH,IAAAA,KAAK,EAAE,MAFE;AAGTI,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,IAAI,EAAE;AAJG;AADoB,CAAlB,CAAf;AASA,eAAetC,iBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Layout, useTheme } from \"@ui-kitten/components\";\r\nimport Form from \"../components/forms/Form\";\r\nimport * as Yup from \"yup\";\r\nimport FormField from \"../components/forms/FormField\";\r\nimport SubmitForm from \"../components/forms/SubmitForm\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchHospitalData } from \"../redux/actions/authActions\";\r\nimport { CustomSpinner } from \"./CustomSpinner\";\r\n\r\nconst HospitalUIDScreen = ({ navigation }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    UID: Yup.number()\r\n      .transform((value) => (isNaN(value) ? undefined : +value))\r\n      .positive()\r\n      .integer(\"UID must be a number\")\r\n      .required(\"Please mention hospital UID\"),\r\n  });\r\n\r\n  const handleSubmit = (values) => {\r\n    // try {\r\n    //   const getHospital = await firestore\r\n    //     .collection(\"hospitals\")\r\n    //     .where(\"UID\", \"==\", +values.UID)\r\n    //     .get();\r\n\r\n    //   if (getHospital.size === 1) {\r\n    //     getHospital.forEach((doc) => {\r\n    //       const hospitalDetails = doc.data();\r\n    //       console.log(doc.uid, \"UID\");\r\n    //       navigation.navigate(\"VerifyHospitalScreen\", {\r\n    //         hospitalDetails: { ...hospitalDetails, id: doc.id },\r\n    //       });\r\n    //     });\r\n    //   } else {\r\n    //     alert(\"Hospital does not exist\");\r\n    //   }\r\n    // } catch (e) {\r\n    //   console.log(e.message);\r\n    // }\r\n\r\n    // Check for error in the redux.\r\n    setIsLoading(true);\r\n    dispatch(fetchHospitalData(+values.UID))\r\n      .then((res) => {\r\n        navigation.navigate(\r\n          \"VerifyHospitalScreen\"\r\n          // , {\r\n          //   hospitalDetails: { ...hospitalDetails, id: doc.id },\r\n          // }\r\n        );\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false);\r\n        alert(e.message);\r\n      });\r\n\r\n    // if (!auth.error) {\r\n    //   navigation.navigate(\r\n    //     \"VerifyHospitalScreen\"\r\n    //     // , {\r\n    //     //   hospitalDetails: { ...hospitalDetails, id: doc.id },\r\n    //     // }\r\n    //   );\r\n    // } else {\r\n    //   alert(auth.error);\r\n    // }\r\n  };\r\n\r\n  const theme = useTheme();\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <CustomSpinner visible={isLoading} />\r\n      <MaterialCommunityIcons\r\n        name=\"hospital-building\"\r\n        size={100}\r\n        color={theme[\"color-primary-500\"]}\r\n        style={{ marginBottom: 30, marginTop: 20 }}\r\n      />\r\n      <Form\r\n        initialValues={{ UID: \"\" }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleSubmit(values)}\r\n      >\r\n        <FormField label=\"Hospital Unique Id\" name=\"UID\" placeholder=\"UID\" />\r\n        <SubmitForm label=\"Next\" btnStyle={{ width: \"50%\" }} />\r\n      </Form>\r\n    </Layout>\r\n  );\r\n  // return isLoading ? (\r\n  //   <CustomSpinner visible={isLoading} />\r\n  // ) : (\r\n  //   <>\r\n  //     <CustomSpinner visible={isLoading} />\r\n  //   <Layout style={styles.container}>\r\n  //     <MaterialCommunityIcons\r\n  //       name=\"hospital-building\"\r\n  //       size={100}\r\n  //       color={theme[\"color-primary-500\"]}\r\n  //       style={{ marginBottom: 30, marginTop: 20 }}\r\n  //     />\r\n  //     <Form\r\n  //       initialValues={{ UID: \"\" }}\r\n  //       validationSchema={validationSchema}\r\n  //       onSubmit={(values) => handleSubmit(values)}\r\n  //     >\r\n  //       <FormField label=\"Hospital Unique Id\" name=\"UID\" placeholder=\"UID\" />\r\n  //       <SubmitForm label=\"Next\" btnStyle={{ width: \"50%\" }} />\r\n  //     </Form>\r\n  //   </Layout>\r\n  //   </>\r\n  // );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    paddingHorizontal: 10,\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default HospitalUIDScreen;\r\n"]},"metadata":{},"sourceType":"module"}