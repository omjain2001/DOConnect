{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Do_connect\\\\app\\\\components\\\\forms\\\\FormField.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Layout, Input } from \"@ui-kitten/components\";\nimport { useFormikContext } from \"formik\";\nimport ErrorMsg from \"../ErrorMsg\";\n\nvar FormField = function FormField(_ref) {\n  var label = _ref.label,\n      placeholder = _ref.placeholder,\n      name = _ref.name,\n      style = _ref.style,\n      otherProps = _objectWithoutProperties(_ref, [\"label\", \"placeholder\", \"name\", \"style\"]);\n\n  var _useFormikContext = useFormikContext(),\n      setFieldValue = _useFormikContext.setFieldValue,\n      errors = _useFormikContext.errors,\n      values = _useFormikContext.values,\n      touched = _useFormikContext.touched,\n      setFieldTouched = _useFormikContext.setFieldTouched;\n\n  return React.createElement(Layout, {\n    style: [styles.container, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, _extends({\n    label: label,\n    name: name,\n    value: values[name],\n    placeholder: placeholder,\n    onChangeText: function onChangeText(value) {\n      return setFieldValue(name, value);\n    },\n    onBlur: function onBlur() {\n      return setFieldTouched(name);\n    }\n  }, otherProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  })), errors[name] && React.createElement(ErrorMsg, {\n    visible: touched[name],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, errors[name]));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    paddingHorizontal: 5,\n    marginVertical: 10\n  }\n});\nexport default FormField;","map":{"version":3,"sources":["E:/Do_connect/app/components/forms/FormField.js"],"names":["React","Layout","Input","useFormikContext","ErrorMsg","FormField","label","placeholder","name","style","otherProps","setFieldValue","errors","values","touched","setFieldTouched","styles","container","value","StyleSheet","create","width","paddingHorizontal","marginVertical"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,uBAA9B;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,QAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAwD;AAAA,MAArDC,KAAqD,QAArDA,KAAqD;AAAA,MAA9CC,WAA8C,QAA9CA,WAA8C;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAAjBC,UAAiB;;AAAA,0BAOpEP,gBAAgB,EAPoD;AAAA,MAEtEQ,aAFsE,qBAEtEA,aAFsE;AAAA,MAGtEC,MAHsE,qBAGtEA,MAHsE;AAAA,MAItEC,MAJsE,qBAItEA,MAJsE;AAAA,MAKtEC,OALsE,qBAKtEA,OALsE;AAAA,MAMtEC,eANsE,qBAMtEA,eANsE;;AASxE,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBR,KAAnB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,KAAK,EAAEK,MAAM,CAACL,IAAD,CAHf;AAIE,IAAA,WAAW,EAAED,WAJf;AAKE,IAAA,YAAY,EAAE,sBAACW,KAAD;AAAA,aAAWP,aAAa,CAACH,IAAD,EAAOU,KAAP,CAAxB;AAAA,KALhB;AAME,IAAA,MAAM,EAAE;AAAA,aAAMH,eAAe,CAACP,IAAD,CAArB;AAAA;AANV,KAOME,UAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAUGE,MAAM,CAACJ,IAAD,CAAN,IACC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEM,OAAO,CAACN,IAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCI,MAAM,CAACJ,IAAD,CAAzC,CAXJ,CADF;AAgBD,CAzBD;;AA2BA,IAAMQ,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AAGTI,IAAAA,KAAK,EAAE,MAHE;AAITC,IAAAA,iBAAiB,EAAE,CAJV;AAKTC,IAAAA,cAAc,EAAE;AALP;AADoB,CAAlB,CAAf;AAUA,eAAelB,SAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Layout, Input } from \"@ui-kitten/components\";\nimport { useFormikContext } from \"formik\";\nimport ErrorMsg from \"../ErrorMsg\";\n\nconst FormField = ({ label, placeholder, name, style, ...otherProps }) => {\n  const {\n    setFieldValue,\n    errors,\n    values,\n    touched,\n    setFieldTouched,\n  } = useFormikContext();\n\n  return (\n    <Layout style={[styles.container, style]}>\n      <Input\n        label={label}\n        name={name}\n        value={values[name]}\n        placeholder={placeholder}\n        onChangeText={(value) => setFieldValue(name, value)}\n        onBlur={() => setFieldTouched(name)}\n        {...otherProps}\n      />\n      {errors[name] && (\n        <ErrorMsg visible={touched[name]}>{errors[name]}</ErrorMsg>\n      )}\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // paddingVertical: 60,\n    // width: 100,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    marginVertical: 10,\n  },\n});\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}