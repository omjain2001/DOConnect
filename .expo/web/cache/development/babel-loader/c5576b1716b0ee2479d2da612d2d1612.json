{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DOConnect\\\\app\\\\screens\\\\RegisterPatientScreen.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Icon, Input } from \"@ui-kitten/components\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as firebase from \"firebase\";\nimport ErrorMsg from \"../components/ErrorMsg\";\n\nvar AlertIcon = function AlertIcon(props) {\n  return React.createElement(Icon, _extends({}, props, {\n    name: \"alert-circle-outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }\n  }));\n};\n\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email\"),\n  pass1: Yup.string().required().min(5).label(\"Password\"),\n  pass2: Yup.string().required().min(5).label(\"Password\")\n});\n\nfunction RegisterPatientScreen(props) {\n  var _this2 = this;\n\n  var onRegister = function onRegister(_ref) {\n    var name, email, pass1, result;\n    return _regeneratorRuntime.async(function onRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref.name, email = _ref.email, pass1 = _ref.pass1;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, pass1));\n\n          case 4:\n            result = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(firebase.firestore.collection(\"users\").doc(result.user.uid).set({\n              email: email,\n              pass: pass1\n            }));\n\n          case 7:\n            console.log(\"Done\");\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      secureTextEntry = _React$useState2[0],\n      setSecureTextEntry = _React$useState2[1];\n\n  var toggleSecureEntry = function toggleSecureEntry() {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  var renderIcon = function renderIcon(props) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: toggleSecureEntry,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, React.createElement(Icon, _extends({}, props, {\n      name: secureTextEntry ? \"eye-off\" : \"eye\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      pass1: \"\",\n      pass2: \"\"\n    },\n    onSubmit: onRegister,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        errors = _ref2.errors;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.inputFields,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, React.createElement(Input, {\n      label: \"Name\",\n      placeholder: \"Name\",\n      onChangeText: handleChange(\"name\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), React.createElement(ErrorMsg, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, errors.name), React.createElement(Input, {\n      label: \"Email\",\n      placeholder: \"Email\",\n      onChangeText: handleChange(\"email\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), React.createElement(ErrorMsg, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, errors.email), React.createElement(Input, {\n      label: \"Password\",\n      placeholder: \"Password\",\n      caption: \"Should contain at least 5 characters\",\n      accessoryRight: renderIcon,\n      captionIcon: AlertIcon,\n      secureTextEntry: secureTextEntry,\n      onChangeText: handleChange(\"pass1\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), React.createElement(ErrorMsg, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, errors.pass1), React.createElement(Input, {\n      label: \"Password\",\n      placeholder: \"Password\",\n      caption: \"Should contain at least 8 symbols\",\n      accessoryRight: renderIcon,\n      captionIcon: AlertIcon,\n      secureTextEntry: secureTextEntry,\n      onChangeText: handleChange(\"pass2\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), React.createElement(ErrorMsg, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, errors.pass2)), React.createElement(View, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, React.createElement(Button, {\n      style: styles.btns,\n      onPress: handleSubmit,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"REGISTER\")));\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputFields: {\n    paddingVertical: 10,\n    width: 300\n  },\n  btns: {\n    width: 300,\n    marginVertical: 5\n  }\n});\nexport default RegisterPatientScreen;","map":{"version":3,"sources":["D:/DOConnect/app/screens/RegisterPatientScreen.js"],"names":["React","Button","Icon","Input","Formik","Yup","firebase","ErrorMsg","AlertIcon","props","validationSchema","object","shape","name","string","required","label","email","pass1","min","pass2","RegisterPatientScreen","onRegister","auth","createUserWithEmailAndPassword","result","firestore","collection","doc","user","uid","set","pass","console","log","useState","secureTextEntry","setSecureTextEntry","toggleSecureEntry","renderIcon","styles","container","handleChange","handleSubmit","errors","inputFields","btns","StyleSheet","create","marginVertical","alignItems","justifyContent","paddingVertical","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Image,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Button, Icon, Input } from \"@ui-kitten/components\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport * as firebase from \"firebase\";\r\n\r\nimport ErrorMsg from \"../components/ErrorMsg\";\r\n\r\nconst AlertIcon = (props) => <Icon {...props} name=\"alert-circle-outline\" />;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required().label(\"Name\"),\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  pass1: Yup.string().required().min(5).label(\"Password\"),\r\n  pass2: Yup.string().required().min(5).label(\"Password\"),\r\n});\r\n\r\nfunction RegisterPatientScreen(props) {\r\n  const onRegister = async ({ name, email, pass1 }) => {\r\n    try {\r\n      const result = await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, pass1);\r\n\r\n      await firebase.firestore.collection(\"users\").doc(result.user.uid).set({\r\n        email: email,\r\n        pass: pass1,\r\n      });\r\n      console.log(\"Done\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\r\n\r\n  const toggleSecureEntry = () => {\r\n    setSecureTextEntry(!secureTextEntry);\r\n  };\r\n\r\n  const renderIcon = (props) => (\r\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\r\n      <Icon {...props} name={secureTextEntry ? \"eye-off\" : \"eye\"} />\r\n    </TouchableWithoutFeedback>\r\n  );\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        {/* <Image\r\n          source={require(\"../asset/register.png\")}\r\n          style={{ height: 300, width: 300 }}\r\n        /> */}\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            pass1: \"\",\r\n            pass2: \"\",\r\n          }}\r\n          onSubmit={onRegister}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({ handleChange, handleSubmit, errors }) => (\r\n            <>\r\n              <View style={styles.inputFields}>\r\n                <Input\r\n                  label=\"Name\"\r\n                  placeholder=\"Name\"\r\n                  onChangeText={handleChange(\"name\")}\r\n                />\r\n                <ErrorMsg>{errors.name}</ErrorMsg>\r\n\r\n                <Input\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  onChangeText={handleChange(\"email\")}\r\n                />\r\n                <ErrorMsg>{errors.email}</ErrorMsg>\r\n\r\n                <Input\r\n                  label=\"Password\"\r\n                  placeholder=\"Password\"\r\n                  caption=\"Should contain at least 5 characters\"\r\n                  accessoryRight={renderIcon}\r\n                  captionIcon={AlertIcon}\r\n                  secureTextEntry={secureTextEntry}\r\n                  onChangeText={handleChange(\"pass1\")}\r\n                />\r\n                <ErrorMsg>{errors.pass1}</ErrorMsg>\r\n\r\n                <Input\r\n                  label=\"Password\"\r\n                  placeholder=\"Password\"\r\n                  caption=\"Should contain at least 8 symbols\"\r\n                  accessoryRight={renderIcon}\r\n                  captionIcon={AlertIcon}\r\n                  secureTextEntry={secureTextEntry}\r\n                  onChangeText={handleChange(\"pass2\")}\r\n                />\r\n                <ErrorMsg>{errors.pass2}</ErrorMsg>\r\n              </View>\r\n              <View>\r\n                <Button style={styles.btns} onPress={handleSubmit}>\r\n                  REGISTER\r\n                </Button>\r\n              </View>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 100,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputFields: {\r\n    paddingVertical: 10,\r\n    width: 300,\r\n  },\r\n  btns: {\r\n    width: 300,\r\n    marginVertical: 5,\r\n  },\r\n});\r\n\r\nexport default RegisterPatientScreen;"]},"metadata":{},"sourceType":"module"}