{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Do_connect\\\\app\\\\screens\\\\LoginScreen.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Icon, Input } from \"@ui-kitten/components\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport ErrorMsg from \"../components/ErrorMsg\";\n\nvar AlertIcon = function AlertIcon(props) {\n  return React.createElement(Icon, _extends({}, props, {\n    name: \"alert-circle-outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 30\n    }\n  }));\n};\n\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  pass: Yup.string().required().min(5).label(\"Password\")\n});\n\nfunction LoginScreen(_ref) {\n  var _this2 = this;\n\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      secureTextEntry = _React$useState2[0],\n      setSecureTextEntry = _React$useState2[1];\n\n  var toggleSecureEntry = function toggleSecureEntry() {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  var renderIcon = function renderIcon(props) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: toggleSecureEntry,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, React.createElement(Icon, _extends({}, props, {\n      name: secureTextEntry ? \"eye-off\" : \"eye\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      pass: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        errors = _ref2.errors;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.inputFields,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, React.createElement(Input, {\n      label: \"Name\",\n      placeholder: \"Name\",\n      onChangeText: handleChange(\"name\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), React.createElement(ErrorMsg, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, errors.name), React.createElement(Input, {\n      label: \"Password\",\n      placeholder: \"Password\",\n      caption: \"Should contain at least 5 characters\",\n      accessoryRight: renderIcon,\n      captionIcon: AlertIcon,\n      secureTextEntry: secureTextEntry,\n      onChangeText: handleChange(\"pass\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), React.createElement(ErrorMsg, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, errors.pass)), React.createElement(View, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, React.createElement(Button, {\n      style: styles.btns,\n      onPress: handleSubmit,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"LOGIN\"), React.createElement(Button, {\n      style: styles.btns,\n      onPress: function onPress() {\n        return navigation.navigate(\"DoctorPatientScreen\");\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"REGISTER\")));\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputFields: {\n    paddingVertical: 60,\n    width: 300\n  },\n  btns: {\n    marginVertical: 5,\n    width: 300\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["E:/Do_connect/app/screens/LoginScreen.js"],"names":["React","Button","Icon","Input","Formik","Yup","ErrorMsg","AlertIcon","props","validationSchema","object","shape","name","string","required","label","pass","min","LoginScreen","navigation","useState","secureTextEntry","setSecureTextEntry","toggleSecureEntry","renderIcon","styles","container","values","console","log","handleChange","handleSubmit","errors","inputFields","btns","navigate","StyleSheet","create","marginVertical","alignItems","justifyContent","paddingVertical","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport { Button, Icon, Input } from \"@ui-kitten/components\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport ErrorMsg from \"../components/ErrorMsg\";\n\nconst AlertIcon = (props) => <Icon {...props} name=\"alert-circle-outline\" />;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  pass: Yup.string().required().min(5).label(\"Password\"),\n});\n\nfunction LoginScreen({ navigation }) {\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon {...props} name={secureTextEntry ? \"eye-off\" : \"eye\"} />\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        {/* <Image\n          source={require(\"../asset/login.png\")}\n          style={{ height: 300, width: 300 }}\n        /> */}\n        <Formik\n          initialValues={{ name: \"\", pass: \"\" }}\n          onSubmit={(values) => console.log(values)}\n          validationSchema={validationSchema}\n        >\n          {({ handleChange, handleSubmit, errors }) => (\n            <>\n              <View style={styles.inputFields}>\n                <Input\n                  label=\"Name\"\n                  placeholder=\"Name\"\n                  onChangeText={handleChange(\"name\")}\n                />\n                <ErrorMsg>{errors.name}</ErrorMsg>\n\n                <Input\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  caption=\"Should contain at least 5 characters\"\n                  accessoryRight={renderIcon}\n                  captionIcon={AlertIcon}\n                  secureTextEntry={secureTextEntry}\n                  onChangeText={handleChange(\"pass\")}\n                />\n                <ErrorMsg>{errors.pass}</ErrorMsg>\n              </View>\n              <View>\n                <Button style={styles.btns} onPress={handleSubmit}>\n                  LOGIN\n                </Button>\n                <Button\n                  style={styles.btns}\n                  onPress={() => navigation.navigate(\"DoctorPatientScreen\")}\n                >\n                  REGISTER\n                </Button>\n              </View>\n            </>\n          )}\n        </Formik>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputFields: {\n    paddingVertical: 60,\n    width: 300,\n  },\n  btns: {\n    marginVertical: 5,\n    width: 300,\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}